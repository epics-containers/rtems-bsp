FROM ubuntu:24.04 as environment

ENV VIRTUALENV /venv
ENV RTEMS_MAJOR=6
ENV RTEMS_MINOR=1
ENV RTEMS_VERSION=${RTEMS_MAJOR}.${RTEMS_MINOR}
ENV RTEMS_ARCH=powerpc
ENV RTEMS_BSP=beatnik
ENV RTEMS_TOP=/rtems6-${RTEMS_BSP}-legacy
ENV RTEMS_PREFIX=${RTEMS_TOP}/rtems/${RTEMS_VERSION}
ENV PATH=${RTEMS_PREFIX}/bin:${PATH}

FROM environment AS developer

# build tools for x86 including busybox (for unzip and others)
# https://docs.rtems.org/branches/master/user/start/preparation.html#host-computer
RUN apt-get update -y && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    bison \
    busybox \
    ca-certificates \
    curl \
    build-essential \
    diffutils \
    flex \
    git \
    && rm -rf /var/lib/apt/lists/* && \
    busybox --install

# use uv to make a python3.11 venv because the RSB does not yet support python3.12
# see https://gitlab.rtems.org/rtems/tools/rtems-source-builder/-/issues/87
RUN curl -LsSf https://github.com/astral-sh/uv/releases/download/0.6.0/uv-x86_64-unknown-linux-gnu.tar.gz -o uv.gz && \
    echo cd1ac8840037940fa69fd18c51dd60ae uv.gz | md5sum -c && \
    tar -xzf uv.gz -C /usr/bin --strip-components=1 && \
    rm uv.gz

# a python venv is requried by the RSB, set up pip for IOCS based on this image
ENV PATH=${VIRTUALENV}/bin:${PATH}
RUN uv venv --python 3.11 ${VIRTUALENV} && \
    python -m ensurepip --upgrade && \
    ln -sf /venv/bin/pip3 /venv/bin/pip

# get and patch the RTEMS Source Builder
WORKDIR ${RTEMS_TOP}
COPY local_patch /local_patch
RUN curl https://ftp.rtems.org/pub/rtems/releases/${RTEMS_MAJOR}/${RTEMS_VERSION}/sources/rtems-source-builder-${RTEMS_VERSION}.tar.xz \
    | tar -xJ && \
    mv rtems-source-builder-${RTEMS_VERSION} rsb && \
    git apply /local_patch/rsb.patch

# get and patch the kernel
RUN curl https://ftp.rtems.org/pub/rtems/releases/${RTEMS_MAJOR}/${RTEMS_VERSION}/sources/rtems-${RTEMS_VERSION}.tar.xz \
    | tar -xJ && \
    mv rtems-${RTEMS_VERSION} kernel && \
    git apply /local_patch/kernel.patch && \
    cd kernel && \
    ./waf bspdefaults --rtems-bsps=${RTEMS_ARCH}/${RTEMS_BSP} > config.ini && \
    sed -i -e "s|RTEMS_POSIX_API = False|RTEMS_POSIX_API = True|" config.ini

# get legacy networking
RUN curl https://ftp.rtems.org/pub/rtems/releases/${RTEMS_MAJOR}/${RTEMS_VERSION}/sources/rtems-net-legacy-${RTEMS_VERSION}.tar.xz \
    | tar -xJ

# build the cross compilation tool suite and strip symbols to minimize size
WORKDIR ${RTEMS_TOP}/rsb/rtems
RUN ../source-builder/sb-set-builder --prefix=${RTEMS_PREFIX} ${RTEMS_MAJOR}/rtems-${RTEMS_ARCH} && \
    strip $(find ${RTEMS_PREFIX}) 2> /dev/null || true
RUN ranlib $(find ${RTEMS_PREFIX} -name '*.a')

# build the Board Support Package with patched kernel
WORKDIR ${RTEMS_TOP}/kernel
RUN ./waf configure --prefix=${RTEMS_PREFIX} && \
    ./waf && \
    ./waf install

# add in the legacy network stack
WORKDIR ${RTEMS_TOP}/rtems-net-legacy-${RTEMS_VERSION}
RUN ./waf configure --prefix=${RTEMS_PREFIX} --rtems-bsps=${RTEMS_ARCH}/${RTEMS_BSP} && \
    ./waf && \
    ./waf install

from environment AS runtime_prep

# To make this container target smaller we take just the BSP
COPY --from=developer ${RTEMS_PREFIX} ${RTEMS_PREFIX}

# remove files that are not required and using space
RUN rm -r \
    ${RTEMS_PREFIX}/share/man \
    ${RTEMS_PREFIX}/share/info \
    ${RTEMS_PREFIX}/powerpc-rtems6/lib/ldscripts

from runtime_prep AS runtime

# environment variables for epics-base build
ENV RTEMS_BASE=${RTEMS_PREFIX}

COPY --from=runtime_prep ${RTEMS_PREFIX} ${RTEMS_PREFIX}

